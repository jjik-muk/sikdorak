import org.hidetake.gradle.swagger.generator.GenerateSwaggerUI
import org.springframework.boot.gradle.tasks.bundling.BootJar

buildscript {
	ext {
		epagesRestdocsVersion = '0.16.2'
	}
}

plugins {
	id 'org.springframework.boot' version '2.7.1'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'com.epages.restdocs-api-spec' version "${epagesRestdocsVersion}"
	id 'org.hidetake.swagger.generator' version '2.18.2'
	id 'java'
}

group = 'com.jjikmuk'
version = '0.0.1'
sourceCompatibility = '17'

jar {
	enabled = false
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

openapi3 {
	setServer("https://sikdorak.herokuapp.com/")
	title = "Sikdorak Service API"
	description = "An API providing greetings to users."
	version = "1.0.0"
	format = "yaml"
}

swaggerSources {
	register("sikdorak").configure {
		setInputFile(file("${project.buildDir}/api-spec/openapi3.yaml"))
	}
}

dependencies {
	// Web
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// Database
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'com.h2database:h2'

	// Dev
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.rest-assured:rest-assured'

	// API Docs
	testImplementation "com.epages:restdocs-api-spec-restassured:${epagesRestdocsVersion}"
	swaggerUI 'org.webjars:swagger-ui:4.11.1'
}

tasks.named('test') {
	useJUnitPlatform()
}

//-- Git submodule 관련 task ------------------------------------------------------
task copyGitSubmodule(type: Copy) {
	from './config'
	include '*.yml'
	into './src/main/resources'
}

//-- API 문서 관련 task -------------------------------------------------------
// API Spec 을 HTML 로 변환
tasks.withType(GenerateSwaggerUI) {
	dependsOn 'openapi3'
}

def generateSwaggerUISikdorakTask = tasks.named('generateSwaggerUISikdorak', GenerateSwaggerUI).get()

// API 문서 HTML 을 build resources 로 복사
tasks.register('copySwaggerUI', Copy) {
	dependsOn 'generateSwaggerUISikdorak'

	from("${generateSwaggerUISikdorakTask.outputDir}")
	into("${project.buildDir}/resources/main/static/docs")
}

// API 문서 HTML 을 main resources 로 복사
tasks.register('copySwaggerUI2MainResources', Copy) {
	dependsOn 'generateSwaggerUISikdorak'

	from("${generateSwaggerUISikdorakTask.outputDir}")
	into("${project.projectDir}/src/main/resources/static/docs")
}

// bootJar 실행 전, copySwaggerUI 를 실행하도록 설정
tasks.withType(BootJar) {
	dependsOn 'copySwaggerUI'
}
